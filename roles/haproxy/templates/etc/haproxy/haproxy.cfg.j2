global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #	local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend http
    bind *:{{ haproxy_port }}
    mode http

{% for backend in haproxy_backends %}
{% if backend.path != "/" %}
    acl url_{{ backend.name }} path_beg {{ backend.path }}
    use_backend		{{ backend.name }} if url_{{ backend.name }}
{% else %}
    default_backend	{{ backend.name }}
{% endif %}
{% endfor %}

{% for backend in haproxy_backends %}
backend {{ backend.name }}
    balance		roundrobin
{% if backend.path != "/" %}
    http-request set-path "%[path,regsub(^{{ backend.path }}?/,/)]" 
{% endif %}

{% for server in backend.servers %}
	server		{{ server.name }} {{ server.url }} check
{% endfor %}
{% endfor %}
